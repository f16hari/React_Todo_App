{"version":3,"sources":["components/navbar.jsx","components/clistcomponent.jsx","components/completedlist.jsx","components/listcomponent.jsx","components/pendinglist.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","react_default","a","createElement","Fragment","className","onSubmit","this","props","id","type","placeholder","aria-label","onChange","Component","CList","trash","tick","handleTrashColor","_this","setState","handleTickColor","data","onClick","doAgain","onMouseOver","onMouseOut","index_es","icon","faCheckCircle","size","color","deleteList","faTrashAlt","Completed","_this2","empty","completed","map","clistcomponent","doagain","List","completeList","Pending","pending","listcomponent","App","value","empty1","empty2","format","length","handleChange","e","target","handleSubmit","preventDefault","document","getElementById","reverse","push","handleDeletePending","dataToBeDelted","index","indexOf","splice","handleDeleteCompleted","handleComplete","handleDoAgain","navbar","pendinglist","completedlist","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01f1a519.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n          <form\r\n            className=\"form-inline my-2 my-md-0 justify-content-md-center w-100 \"\r\n            onSubmit={this.props.onSubmit}\r\n          >\r\n            <input\r\n              id=\"inputdata\"\r\n              className=\"form-control w-50\"\r\n              type=\"text\"\r\n              placeholder=\"Enter new todo item .....\"\r\n              aria-label=\"Search\"\r\n              onChange={this.props.onChange}\r\n            />\r\n            <button className=\"btn btn-primary m-3\" type=\"submit\">\r\n              ADD\r\n            </button>\r\n          </form>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./list.css\";\r\n\r\nclass CList extends Component {\r\n  state = {\r\n    trash: \"grey\",\r\n    tick: \"green\"\r\n  };\r\n  handleTrashColor = () => {\r\n    let trash = this.state.trash;\r\n    if (trash === \"red\") trash = \"gray\";\r\n    else trash = \"red\";\r\n    this.setState({ trash });\r\n  };\r\n  handleTickColor = () => {\r\n    let tick = this.state.tick;\r\n    if (tick === \"green\") tick = \"gray\";\r\n    else tick = \"green\";\r\n    this.setState({ tick });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list p-3 mb-3\">\r\n          <span>\r\n            <label id=\"data\">{this.props.data}</label>\r\n            <button\r\n              className=\"btn action-buttons\"\r\n              onClick={this.props.doAgain}\r\n              onMouseOver={this.handleTickColor}\r\n              onMouseOut={this.handleTickColor}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faCheckCircle}\r\n                size=\"2x\"\r\n                color={this.state.tick}\r\n              />\r\n            </button>\r\n            <button\r\n              className=\"btn action-buttons\"\r\n              onClick={this.props.deleteList}\r\n              onMouseOver={this.handleTrashColor}\r\n              onMouseOut={this.handleTrashColor}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTrashAlt}\r\n                size=\"2x\"\r\n                color={this.state.trash}\r\n              />\r\n            </button>\r\n            <div className=\"clearfix\" />\r\n          </span>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CList;\r\n","import React, { Component } from \"react\";\r\nimport CList from \"./clistcomponent\";\r\n\r\nclass Completed extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h2 className=\"text-center p-3 text-primary\">Completed Activities</h2>\r\n          <p className=\"text-center text-secondary\">{this.props.empty}</p>\r\n          {this.props.completed.map(completed => (\r\n            <div>\r\n              <CList\r\n                data={completed}\r\n                deleteList={() => this.props.deleteList({ completed })}\r\n                doAgain={() => this.props.doagain({ completed })}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Completed;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./list.css\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    trash: \"grey\",\r\n    tick: \"grey\"\r\n  };\r\n  handleTrashColor = () => {\r\n    let trash = this.state.trash;\r\n    if (trash === \"red\") trash = \"gray\";\r\n    else trash = \"red\";\r\n    this.setState({ trash });\r\n  };\r\n  handleTickColor = () => {\r\n    let tick = this.state.tick;\r\n    if (tick === \"green\") tick = \"gray\";\r\n    else tick = \"green\";\r\n    this.setState({ tick });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list p-3 mb-3\">\r\n          <span>\r\n            <label id=\"data\">{this.props.data}</label>\r\n            <button\r\n              className=\"btn action-buttons\"\r\n              onClick={this.props.completeList}\r\n              onMouseOver={this.handleTickColor}\r\n              onMouseOut={this.handleTickColor}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faCheckCircle}\r\n                size=\"2x\"\r\n                color={this.state.tick}\r\n              />\r\n            </button>\r\n            <button\r\n              className=\"btn action-buttons\"\r\n              onClick={this.props.deleteList}\r\n              onMouseOver={this.handleTrashColor}\r\n              onMouseOut={this.handleTrashColor}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTrashAlt}\r\n                size=\"2x\"\r\n                color={this.state.trash}\r\n              />\r\n            </button>\r\n            <div className=\"clearfix\" />\r\n          </span>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport List from \"./listcomponent\";\r\nimport { format } from \"path\";\r\n\r\nclass Pending extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h2 className=\"text-center p-3 text-primary\">Pending Activities</h2>\r\n          <p className=\"text-center text-secondary\">{this.props.empty}</p>\r\n          <span className=\"text-center\" id=\"empty\" />\r\n          {this.props.pending.map(pending => (\r\n            <div id=\"pending\">\r\n              <List\r\n                data={pending}\r\n                deleteList={() => this.props.deleteList({ pending })}\r\n                completeList={() => this.props.completeList({ pending })}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <hr />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pending;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Completed from \"./components/completedlist\";\nimport Pending from \"./components/pendinglist\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    pending: [],\n    completed: [],\n    empty1: \"No pending Activity\",\n    empty2: \"No pending activities completed\"\n  };\n\n  format = () => {\n    let empty1;\n    let empty2;\n    if (this.state.pending.length) {\n      empty1 = \"\";\n      this.setState({ empty1 });\n    } else {\n      empty1 = \"No pending Activity\";\n      this.setState({ empty1 });\n    }\n\n    if (this.state.completed.length) {\n      empty2 = \"\";\n      this.setState({ empty2 });\n    } else {\n      empty2 = \"No pending activities completed\";\n      this.setState({ empty2 });\n    }\n  };\n  handleChange = e => {\n    const value = e.target.value;\n    this.setState({ value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    document.getElementById(\"inputdata\").value = \"\";\n    if (this.state.value !== \"\") {\n      const pending = this.state.pending;\n      pending.reverse();\n      pending.push(this.state.value);\n      pending.reverse();\n      this.setState({ pending });\n    }\n    let value = this.state.value;\n    value = \"\";\n    this.setState({ value });\n    this.format();\n  };\n\n  handleDeletePending = target => {\n    const dataToBeDelted = target.pending;\n    var index = this.state.pending.indexOf(dataToBeDelted);\n    if (index !== -1) {\n      const pending = this.state.pending;\n      pending.splice(index, 1);\n      this.setState({ pending });\n    }\n    this.format();\n    return dataToBeDelted;\n  };\n\n  handleDeleteCompleted = target => {\n    const dataToBeDelted = target.completed;\n    var index = this.state.completed.indexOf(dataToBeDelted);\n    if (index !== -1) {\n      const completed = this.state.completed;\n      completed.splice(index, 1);\n      this.setState({ completed });\n    }\n    this.format();\n    return dataToBeDelted;\n  };\n\n  handleComplete = target => {\n    const data = this.handleDeletePending(target);\n    const completed = this.state.completed;\n    completed.reverse();\n    completed.push(data);\n    completed.reverse();\n    this.setState(completed);\n    this.format();\n  };\n\n  handleDoAgain = target => {\n    const data = this.handleDeleteCompleted(target);\n    const pending = this.state.pending;\n    pending.reverse();\n    pending.push(data);\n    pending.reverse();\n    this.setState(pending);\n    this.format();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          pending={this.state.pending}\n        />\n        <div>\n          <Pending\n            pending={this.state.pending}\n            deleteList={this.handleDeletePending}\n            completeList={this.handleComplete}\n            empty={this.state.empty1}\n          />\n          <Completed\n            completed={this.state.completed}\n            deleteList={this.handleDeleteCompleted}\n            doagain={this.handleDoAgain}\n            empty={this.state.empty2}\n          />\n          <br />\n          <br />\n          <br />\n          <br />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}